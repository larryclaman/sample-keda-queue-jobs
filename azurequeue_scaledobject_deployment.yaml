apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: azure-queue-scaledobject-deployment
  namespace: default
spec:
  pollingInterval: 30
  minReplicaCount: 0
  maxReplicaCount: 50
  scaleTargetRef:
    name: azure-queue-dequeuer
    kind: Deployment
  triggers:
  - type: azure-queue
    metadata:
      queueName: keda-queue
      queueLength: '1'  # eg, one pod can handle 1 message
      connectionFromEnv: AzureWebJobsStorage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-queue-dequeuer
  labels:
    app: dequeuer
spec:
  selector:
    matchLabels:
      app: dequeuer
  template:
    metadata:
      labels:
        app: dequeuer
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 3600 # wait one hour before sending SIGTERM
      volumes:
        - name: runstate
          configMap:
            name: runstatemap
      containers:
        - name: consumer
          image: $ACR.azurecr.io/queue-consumer-ongoing:$TAG
          volumeMounts:
            - name: runstate
              mountPath: "/mnt/runstate"
              readOnly: true
          #ports:
          #  - containerPort: 80
          lifecycle:
            preStop:
              exec:
                #command: ["/bin/sh","-c","sleep 3600"] # Do nothing for one hour
                command: ["/bin/sleep","3600"] # Do nothing for one hour
          resources:
            requests:
              cpu: 100m
              memory: 2000Mi
            limits:
              cpu: 100m
              memory: 3000Mi
          env:
              - name: AzureWebJobsStorage
                valueFrom:
                  secretKeyRef:
                    name: secrets
                    key: AzureWebJobsStorage
              - name: QUEUE_NAME
                value: keda-queue
              - name: WorkTime
                value: '$WORKTIME'
              - name: TERMFILE 
                value: "/mnt/runstate/runstate"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ww-pdb
spec:
  minAvailable: '100%'
  #MaxUnavailable: 0
  selector:
    matchLabels:
      app: dequeuer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: runstatemap
data:
  # property-like keys; each key maps to a simple value
  runstate: "run"
